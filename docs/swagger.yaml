basePath: /
definitions:
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.Person:
    properties:
      age:
        type: integer
      gender:
        type: string
      id:
        type: integer
      name:
        type: string
      nationality:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.PersonInput:
    properties:
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    required:
    - name
    - surname
    type: object
  model.SuccessResponse:
    properties:
      message:
        type: string
      status:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: API for managing people
  title: KhanProj API
  version: "1.0"
paths:
  /person/create:
    post:
      consumes:
      - application/json
      parameters:
      - description: Input for person creation
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.PersonInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Create new person
      tags:
      - Person
  /person/delete/{id}:
    delete:
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Delete person by ID
      tags:
      - Person
  /person/getAll:
    get:
      parameters:
      - description: Name filter
        in: query
        name: name
        type: string
      - description: Gender filter
        in: query
        name: gender
        type: string
      - description: Nationality filter
        in: query
        name: nationality
        type: string
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Person'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get all people with filters and pagination
      tags:
      - Person
  /person/getPerson/{id}:
    get:
      parameters:
      - description: Person ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Person'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Get person by ID
      tags:
      - Person
  /person/update:
    put:
      consumes:
      - application/json
      parameters:
      - description: Person info
        in: body
        name: person
        required: true
        schema:
          $ref: '#/definitions/model.Person'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Update person
      tags:
      - Person
swagger: "2.0"
